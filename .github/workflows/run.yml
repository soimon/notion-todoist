name: Run

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - uses: robinraju/release-downloader@v1.8
        id: download
        with:
          latest: true
          tarBall: true
          zipBall: false
          out-file-path: 'release'
          extract: true

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          cd release/package
          npm install

      - name: Restore sync file
        uses: UnlyEd/github-action-store-variable@v2.1.0
        with:
          variables: LAST_SYNC_INFO

      - name: Write sync file to disk
        if: ${{ env.LAST_SYNC_INFO }} != ''
        run: echo "$LAST_SYNC_INFO" > ./release/package/last-sync-info.json

      - name: Run Node
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DB_TASKS: ${{ secrets.NOTION_DB_TASKS }}
          NOTION_DB_PROJECTS: ${{ secrets.NOTION_DB_PROJECTS }}
          NOTION_DB_GOALS: ${{ secrets.NOTION_DB_GOALS }}
          TODOIST_TOKEN: ${{ secrets.TODOIST_TOKEN }}
          TODOIST_PROJECT_ROOT: ${{ secrets.TODOIST_PROJECT_ROOT }}
          IS_GITHUB_ACTION: true
        run: |
          cd release/package
          node .

      - name: Read contents of new sync file
        id: vars
        run: echo "::set-output name=LAST_SYNC_INFO::$(cat ./release/package/last-sync-info.json)"

      - name: Store the sync file
        uses: UnlyEd/github-action-store-variable@v3.0
        with:
          variables: LAST_SYNC_INFO="${{ steps.vars.outputs.LAST_SYNC_INFO }}"
